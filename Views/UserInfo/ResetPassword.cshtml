@model RMS.Models.UserInfoDTO
@{
    ViewBag.Title = "2244Reset Password";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
@using (Html.BeginForm("ResetPassword", "UserInfo", FormMethod.Post, new { id = "frmSubmit", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.UserSLNo, new { id = "txtUserSLNo" })
    <section class="content" style="padding-top:15px;">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card card-danger">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fas fa-key"></i><span>&nbsp;&nbsp;Reset Password</span></h3>
                        </div>
                        <div class="card-body">
                            <div class="row" style="padding-top:10px; padding-bottom:0px;">
                                <div class="col-xs-12 col-sm-4 col-md-3">
                                    @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @Html.TextBoxFor(model => model.Email, new { @autocomplete = "off", @readonly = "readonly", @class = "form-control input-sm", id = "txtEmail" })
                                </div>
                                <div class="col-xs-12 col-sm-4 col-md-3" style="padding-left:40px">
                                    @Html.LabelFor(model => model.UserID, new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @Html.TextBoxFor(model => model.UserID, new { @readonly = "readonly", @class = "form-control input-sm", id = "txtNewUserID" })
                                </div>
                            </div>
                            <div class="row" style="padding-top:10px; padding-bottom:0px;">
                                <div class="col-xs-12 col-sm-4 col-md-3">
                                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @Html.TextBoxFor(model => model.FirstName, new { @readonly = "readonly", @class = "form-control input-sm", id = "txtFirstName" })
                                </div>
                                <div class="col-xs-12 col-sm-4 col-md-3" style="padding-left:40px">
                                    @Html.LabelFor(model => model.LastName, new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @Html.TextBoxFor(model => model.LastName, new { @readonly = "readonly", @class = "form-control input-sm", id = "txtLastName" })
                                </div>
                            </div>
                            <hr />
                            <div class="row" style="padding-top:10px; padding-bottom:0px;">
                                <div class="required col-xs-12 col-sm-4 col-md-3">
                                    @Html.Label("New Password", new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @Html.Password("Password", Model.Password, new { @autofocus = "autofocus", placeholder = "Enter New Password", autocomplete = "new-password", @class = "form-control input-sm", id = "txtPassword", Textmode = "Password", value = "" })
                                </div>
                                <div class="required col-xs-12 col-sm-4 col-md-3" style="padding-left:40px">
                                    @Html.Label("Confirm Password", new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @Html.Password("ConfirmPassword", Model.Password, new { placeholder = "Enter Confirm Password", autocomplete = "confirm-password", @class = "form-control input-sm", id = "txtConfirmPassword", Textmode = "Password", value = "" })
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <span>Fields marked with an asterisk &nbsp;</span><span style="color:red;"><b>*</b></span><span>&nbsp; are mandatory.</span>
                            <button type="button" class="btn btn-success" style="float: right;"
                                    id="btnFormSave" onclick="return SaveValidator();">
                                <i class="fas fa-save"></i>
                                <span>&nbsp;Reset Password</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<style type="text/css">
    .form-control {
        width: auto;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<style type="text/css" media="screen">
    #spinner {
        position: fixed;
        top: -18%;
        left: 30%;
    }
</style>

<script src="~/Scripts/jquery-3.6.0.js"></script>
<script src="~/Template/plugins/jquery-ui/jquery-ui.js"></script>
<script src="~/Scripts/notify.js"></script>
<script src="~/Scripts/SweetAlert2/sweetalert2.all.min.js"></script>
<script src="~/Scripts/SweetAlert2/sweetalert2.min.js"></script>

<script src="~/Template/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="~/Template/plugins/jszip/jszip.min.js"></script>
<script src="~/Template/plugins/pdfmake/pdfmake.min.js"></script>
<script src="~/Template/plugins/pdfmake/vfs_fonts.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<script src="~/Template/plugins/datatables-select/js/dataTables.select.min.js"></script>

<link href="~/Template/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />
<link href="~/Template/plugins/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Template/plugins/buttons.dataTables.css" rel="stylesheet" />
<link href="~/Template/plugins/dataTables.bootstrap5.css" rel="stylesheet" />

<!-- Font Awesome -->
<link rel="stylesheet" href="~/Template/plugins/fontawesome-free/css/all.min.css">
<!-- Theme style -->
<link rel="stylesheet" href="~/Template/dist/css/adminlte.min.css">
<!-- overlayScrollbars -->
<link rel="stylesheet" href="~/Template/plugins/overlayScrollbars/css/OverlayScrollbars.min.css">

<script type="text/javascript">
    $(document).ready(function () {
        //==
    });
</script>
<script type="text/javascript">
    function SaveValidator() {
        //==Validation
        var Password = $('#txtPassword').val();
        var ConfirmPassword = $('#txtConfirmPassword').val();
        if (Password == "" || Password == null) {
            Swal.fire({
                icon: 'warning',
                title: 'Password cannot be blank!',
                text: 'Validation Message!',
            })
            return false;
        }
        //==
        var valid_str = validatePass(Password);
        if (valid_str == 1) { // MINIMUM 8 CHARACTERS
            Swal.fire({
                icon: 'warning',
                title: 'Password minimum 8 characters!',
                text: 'Validation Message!',
            })
            return false;
        } else if (valid_str == 2) { // NO HAS UPPERCASE
            Swal.fire({
                icon: 'warning',
                title: 'Password has no uppercase!',
                text: 'Validation Message!',
            })
            return false;
        } else if (valid_str == 3) { // NO HAS LOWERCASE
            Swal.fire({
                icon: 'warning',
                title: 'Password has no lowercase!',
                text: 'Validation Message!',
            })
            return false;
        } else if (valid_str == 4) { // NO HAS NUMERIC
            Swal.fire({
                icon: 'warning',
                title: 'Password has no numeric characters!',
                text: 'Validation Message!',
            })
            return false;
        } else if (valid_str == 5) { // NO HAS SPECIAL CHARACTERS
            Swal.fire({
                icon: 'warning',
                title: 'Password has no special characters!',
                text: 'Validation Message!',
            })
            return false;
        }
        //==
        if (ConfirmPassword == "" || ConfirmPassword == null) {
            Swal.fire({
                icon: 'warning',
                title: 'Confirm Password cannot be blank!',
                text: 'Validation Message!',
            })
            return false;
        }
        if (Password != ConfirmPassword) {
            Swal.fire({
                icon: 'warning',
                title: 'Password and Confirm Password does not match!',
                text: 'Validation Message!',
            })
            return false;
        }
        //==Save to Submit Form
        Swal.fire({
            title: "Are you sure to reset password?",
            text: "Changing user password",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes,&nbsp;Reset Password'
        }).then((result) => {
            if (result.value) {
                $('#spinner').show();
                var headers = { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() };
                //Ajax Post Call
                $.ajax({
                    type: "POST",
                    headers: headers,
                    url: "/UserInfo/ResetPassword",
                    data: { UserSLNo: $("#txtUserSLNo").val(), Password: $("#txtPassword").val() },
                    success: function (response) {
                        $('#spinner').hide();
                        if (response.CheckStatus == true) {
                            Swal.fire({
                                icon: 'success',
                                title: 'The password has been reset',
                                text: 'Changed user password',
                            })
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Password reset not working, execution not possible!',
                                text: 'Something went wrong!',
                            })
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                //==
            }
        });
    }
    function validatePass(pswd) {
        var validLength = /.{8,}/.test(pswd);
        var hasCaps = /[A-Z]/.test(pswd);
        var hasLower = /[a-z]/.test(pswd);
        var hasNums = /\d/.test(pswd);
        var hasSpecials = /[~!,@@#%&_\$\^\*\?\-]/.test(pswd);
        if (validLength) {
            if (hasCaps) {
                if (hasLower) {
                    if (hasNums) {
                        if (hasSpecials) {
                            return 0;
                        } else return 5;
                    } else return 4;
                } else return 3;
            } else return 2;
        } else return 1;
    }
</script>