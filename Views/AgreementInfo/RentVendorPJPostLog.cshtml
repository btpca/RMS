@model IEnumerable<RMS.Models.RentVendorPJExecuteLogDTO>
@{
    ViewBag.Title = "Post Rent Payment Logs";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.FirstOrDefault().LogIDList)
<section class="content" style="padding-top:15px;">
    <div class="container-fluid">
        <div class="col-md-12">
            <div class="card card-danger">
                <div class="card-header">
                    <h3 class="card-title"><i class="fas fa-users"></i><span>&nbsp;&nbsp;Post Rent Payment Logs</span></h3>
                    <div id="spinner" style="display: none;padding-top:50px; padding-bottom:20px; padding-left:100px;">
                        <img id="img-spinner" src="@Url.Content("~/Content/Images/spinner.gif")" alt="Loading" />
                    </div>
                </div>
                <div class="card-body">
                    <table id="summary" class="display compact table table-striped table-bordered mt-2">
                        <thead>
                            <tr>
                                <th class="text-center">
                                    @Html.CheckBox("selectAll", new { id = "selectAll", onclick = "return toggle()", @class = "chk" })
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.LogID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.LogName)
                                </th>
                                <th>
                                    @Html.DisplayName("Log Date")
                                </th>
                                <th>
                                    @Html.DisplayName("Log Year")
                                </th>
                                <th>
                                    @Html.DisplayName("Log Month")
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.EntryBy)
                                </th>
                                <th class="text-center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="text-center">
                                        @Html.CheckBox("A", new { @class = "check", id = "chkBox" + item.RowNumber })
                                    </td>
                                    <td style="width:100px;">
                                        @*@Html.TextBoxFor(modelItem => item.LogID, new { @class = "form-control input-sm", id = "txtLogID" + item.RowNumber, disabled = "disabled" })*@
                                        @Html.DisplayFor(modelItem => item.LogID)
                                        @Html.HiddenFor(modelItem => item.LogID, new { id = "txtLogID" + item.RowNumber })
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LogName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LogDate, "{0:dd/MM/yyyy}")
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LogYear)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LogMonth)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.EntryBy)
                                    </td>
                                    <td class="text-center">
                                        @Html.ActionLink(" ", "RedirectRentVendorPJLogDetails", new { LogID = item.LogID }, new { @Title = "Log Details", @class = "btn btn-info fas fa-folder-open" })
                                        @Html.ActionLink(" ", "RedirectPreviewRentVendorPJInfoDetails", new { PostingID = item.LogID }, new { @Title = "Preview Rent Payment Journal (Pay to Vendor)", @class = "btn btn-warning fas fa-copy" })
                                        @Html.ActionLink(" ", "RedirectPreviewRentGovtPJInfoDetails", new { PostingID = item.LogID }, new { @Title = "Preview Rent Payment Journal (Pay to Govt.)", @class = "btn btn-success fas fa-copy" })
                                        <a href="#" title="Delete Log" class="btn btn-danger" style="margin-top:3px;" onclick="return DeleteValidator('@item.LogID');">
                                            <i class="nav-icon fas fa-trash-alt"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <span>Click the &nbsp;</span><span style="color:teal;" class="card-title fas fa-folder-open float-lg-none">&nbsp;Details</span><span>&nbsp; button at the right to open the Rent Vendor Payment Journal Log details.</span>
                    <button type="button" class="btn btn-danger" style="margin-right: 15px; float: right;"
                            id="btnPost" onclick="return Validator();">
                        <i class="fas fa-bolt"></i>
                        <span>&nbsp;Post Log</span>
                    </button>
                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>
</section>
<style type="text/css">
    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<style type="text/css" media="screen">
    #spinner {
        position: fixed;
        top: -18%;
        left: 30%;
    }
</style>

<script src="~/Scripts/jquery-3.6.0.js"></script>
<script src="~/Template/plugins/jquery-ui/jquery-ui.js"></script>
<script src="~/Scripts/notify.js"></script>
<script src="~/Scripts/SweetAlert2/sweetalert2.all.min.js"></script>
<script src="~/Scripts/SweetAlert2/sweetalert2.min.js"></script>

<script src="~/Template/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="~/Template/plugins/jszip/jszip.min.js"></script>
<script src="~/Template/plugins/pdfmake/pdfmake.min.js"></script>
<script src="~/Template/plugins/pdfmake/vfs_fonts.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<script src="~/Template/plugins/datatables-select/js/dataTables.select.min.js"></script>

<link href="~/Template/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />
<link href="~/Template/plugins/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Template/plugins/buttons.dataTables.css" rel="stylesheet" />
<link href="~/Template/plugins/dataTables.bootstrap5.css" rel="stylesheet" />

<script type="text/javascript" charset="utf-8">
    $(document).ready(function () {
        $('#spinner').show();
        var AlertMsg = @Html.Raw(Json.Encode(ViewBag.AlertMsg));
        if (AlertMsg != null) {
            $.notify(AlertMsg, {
                className: 'error',
                clickToHide: true,
                autoHide: false,
                globalPosition: 'right top'
            });
        }
        $('#summary').DataTable({
            dom: 'Blfrtip',
            responsive: true,
            AutoWidth: true,
            searching: true,
            pageLength: -1,
            paging: true,
            select: true,
            //ordering: false,
            order: [[1, "asc"]],
            "columnDefs": [
                { "orderable": false, "targets": 0 }
            ],
            lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
            buttons: [
                {
                    extend: 'copyHtml5',
                    orientation: 'landscape',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'excelHtml5',
                    orientation: 'landscape',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'pdfHtml5',
                    orientation: 'landscape',
                    exportOptions: {
                        columns: ':visible'
                        //columns: [0, 1, 2, 5]
                    }
                },
                {
                    extend: 'print',
                    orientation: 'landscape',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'colvis',
                    orientation: 'landscape',
                    collectionLayout: 'fixed three-column'
                }
            ],
        });
        $('#spinner').hide();

        $(".check").click(function () {
            var rowCount = document.getElementById('summary').rows.length;
            var CheckedCount = 0;
            for (var i = 0; i < rowCount - (+1); i++) {
                $("#selectAll").prop("checked", false);
                var returnvalue = $("#" + "chkBox" + i).prop("checked");
                if (returnvalue == true) {
                    CheckedCount = +CheckedCount + +1;
                }
                else {
                    //==Nothing
                }
            }
            if (CheckedCount == rowCount - (+1)) {
                $("#selectAll").prop("checked", true);
            }
        });
    });
</script>
<script>

    function toggle() {

        var rowCount = document.getElementById('summary').rows.length;
        var rootChkBox = $("#selectAll").prop("checked");
        var count = 0;

        if (rootChkBox == true) {
            $("#showMessage").val("");
            for (count = 0; count < rowCount - (+1); count++) {
                $('#chkBox' + count).prop('checked', true)
            }
        }

        if (rootChkBox == false) {
            for (count = 0; count < rowCount - (+1); count++) {
                $('#chkBox' + count).prop('checked', false)
            }
        }

    }

    function Validator() {

        var table = $('#summary').DataTable();
        if (!table.data().any()) {
            Swal.fire({
                icon: 'warning',
                title: 'No data available!',
                text: 'Something went wrong!',
            })
            return false;
        }

        var ListLogID = [];
        var counter = 0;

        var rowCount = document.getElementById('summary').rows.length;

        for (var i = 0; i < rowCount - (+1); i++) {
            var returnvalue = $("#" + "chkBox" + i).prop("checked");
            if (returnvalue == true) {
                var LogID = document.getElementById("txtLogID" + i).value;
                ListLogID.push(LogID);
            }
        }

        for (var i = 0; i < rowCount - (+1); i++) {
            var returnvalue = $("#" + "chkBox" + i).prop("checked");
            if (returnvalue == false) {
                counter++;
            }
        }

        if (counter == (rowCount - +1)) {
            Swal.fire({
                icon: 'warning',
                title: 'Please select log from the list!',
                text: 'Something went wrong!',
            })
            return false;
        }
        //==
        Swal.fire({
            title: "Are you sure to Post Log?",
            text: "You won't be able to revert this!",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes,&nbsp;Post Log'
        }).then((result) => {
            if (result.value) {
                $('#spinner').show();
                var headers = { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() };
                //==
                $.ajax({
                    type: "POST",
                    headers: headers,
                    url: "/AgreementInfo/RentVendorPJPostLog",
                    data: {
                        LogIDCheckList: ListLogID
                    },
                    dataType: "json",
                    success: function (response) {
                        $('#spinner').hide();
                        if (response.CheckStatus == true) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Rent Payment Journal Log posted successfully.',
                                text: 'Redirecting in 3 seconds.',
                                timer: 3000,
                                showConfirmButton: false
                            }).then(function () {
                                window.location.href = "/AgreementInfo/RentVendorPJPostLog";
                            });
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Rent Payment Journal Log posting error, execution not possible!',
                                text: 'Something went wrong!',
                            })
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                //==
            }
        });
        //==
    }
</script>
<script type="text/javascript" charset="utf-8">
    function DeleteValidator(LogID) {
        Swal.fire({
            title: "Are you sure to delete the Rent Payment Log: " + LogID + "?",
            text: "You won't be able to revert this!",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes,&nbsp;Delete Log'
        }).then((result) => {
            if (result.value) {
                $('#spinner').show();
                var headers = { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() };
                $.ajax({
                    type: "POST",
                    headers: headers,
                    url: "/AgreementInfo/DeleteRentPaymentLog",
                    data: { LogID: LogID },
                    success: function (response) {
                        $('#spinner').hide();
                        if (response.CheckStatus == true) {
                            Swal.fire({
                                icon: 'success',
                                title: 'The log has been deleted.',
                                text: 'Redirecting in 3 seconds.',
                                timer: 3000,
                                showConfirmButton: false
                            }).then(function () {
                                window.location.href = "/AgreementInfo/RentVendorPJPostLog";
                            });
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Rent Payment Log not deleted, execution not possible!',
                                text: 'Something went wrong!',
                            })
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }
        });
    }
</script>