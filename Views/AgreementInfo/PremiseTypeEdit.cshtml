@model IEnumerable<RMS.Models.PremiseTypeInfoDTO>
@{
    ViewBag.Title = "Premise Type";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}
@using (Html.BeginForm("PremiseTypeEdit", "AgreementInfo", FormMethod.Post, new { id = "frmSubmit", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.FirstOrDefault().PremiseTypeSLNo)
    @Html.HiddenFor(model => model.FirstOrDefault().PremiseTypeCode, new { id = "txtOldPremiseTypeCode" })
    @Html.HiddenFor(model => model.FirstOrDefault().PremiseType, new { id = "txtOldPremiseType" })
    <section class="content" style="padding-top:15px;">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card card-danger">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fas fa-bolt"></i><span>&nbsp;&nbsp;Premise Type</span></h3>
                        </div>
                        <div class="card-body">
                            <div class="row" style="padding-top:10px; padding-bottom:0px;">
                                <div class="required col-xs-12 col-sm-4 col-md-3">
                                    @Html.Label("Premise Type Code", new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @Html.TextBoxFor(model => model.FirstOrDefault().PremiseTypeCode, new { style = "width: 350px;", autocomplete = "off", @type = "number", @min = "0", @step = "0.01", @class = "form-control input-sm", id = "txtPremiseTypeCode" })
                                </div>
                            </div>
                            <div class="row" style="padding-top:10px; padding-bottom:0px;">
                                <div class="required col-xs-12 col-sm-4 col-md-3">
                                    @Html.Label("Premise Type", new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @Html.TextBoxFor(model => model.FirstOrDefault().PremiseType, new { style = "width: 350px;", autocomplete = "off", @class = "form-control input-sm", id = "txtPremiseType" })
                                </div>
                            </div>
                            <div class="row" style="padding-top:10px; padding-bottom:0px;">
                                <div class="col-xs-12 col-sm-4 col-md-3">
                                    @Html.LabelFor(model => model.FirstOrDefault().Status, new { @class = "control-label" })
                                </div>
                                <div class="col-xs-12 col-sm-8 col-md-3">
                                    @foreach (var item in ViewBag.Status)
                                    {
                                        Int32 id = item.StatusValue;
                                        @Html.RadioButtonFor(model => model.FirstOrDefault().Status, id) <text> &nbsp; </text> @item.StatusName <text> &nbsp; </text>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <span>Fields marked with an asterisk &nbsp;</span><span style="color:red;"><b>*</b></span><span>&nbsp; are mandatory.</span>
                            <button type="button" class="btn btn-success" style="float: right;"
                                    id="btnSave">
                                <i class="fas fa-save"></i>
                                <span>&nbsp;Update</span>
                            </button>
                            <button type="button" class="btn btn-warning" style="float: right; margin-right:15px;"
                                    id="btnFormBack" onclick="return BackValidator();">
                                <i class="fas fa-reply"></i>
                                <span>&nbsp;Back to List</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<style type="text/css">
    .form-control {
        width: auto;
    }

    .required:after {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<style type="text/css" media="screen">
    #spinner {
        position: fixed;
        top: -18%;
        left: 30%;
    }
</style>

<script src="~/Scripts/jquery-3.6.0.js"></script>
<script src="~/Template/plugins/jquery-ui/jquery-ui.js"></script>
<script src="~/Scripts/notify.js"></script>
<script src="~/Scripts/SweetAlert2/sweetalert2.all.min.js"></script>
<script src="~/Scripts/SweetAlert2/sweetalert2.min.js"></script>

<script src="~/Template/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="~/Template/plugins/jszip/jszip.min.js"></script>
<script src="~/Template/plugins/pdfmake/pdfmake.min.js"></script>
<script src="~/Template/plugins/pdfmake/vfs_fonts.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="~/Template/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
<script src="~/Template/plugins/datatables-select/js/dataTables.select.min.js"></script>

<link href="~/Template/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />
<link href="~/Template/plugins/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Template/plugins/buttons.dataTables.css" rel="stylesheet" />
<link href="~/Template/plugins/dataTables.bootstrap5.css" rel="stylesheet" />

<script type="text/javascript">
    $(document).ready(function () {
        //==Nothing
    });
</script>
<script type="text/javascript">

    function BackValidator() {
        window.location.href = "/AgreementInfo/PremiseTypeIndex";
    }

    $('#btnSave').on('click', function () {
        //==Validation
        if ($("#txtPremiseTypeCode").val() == 0 || $("#txtPremiseTypeCode").val() == "" || $("#txtPremiseTypeCode").val() == null) {
            Swal.fire({
                icon: 'warning',
                title: 'Enter the premise code!',
                text: 'Validation Message!',
            })
            return false;
        }
        if ($("#txtPremiseType").val() == "" || $("#txtPremiseType").val() == null) {
            Swal.fire({
                icon: 'warning',
                title: 'Enter the premise type!',
                text: 'Validation Message!',
            })
            return false;
        }
        //==Save to Submit Form
        Swal.fire({
            title: "Are you sure to update the premise type?",
            text: "Please review all required information entered!",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes,&nbsp;Update'
        }).then((result) => {
            if (result.value) {
                //==Check Premise Code and Type Exist
                $('#spinner').show();
                $.ajax({
                    type: "GET",
                    url: "/AgreementInfo/CheckPremiseTypeExist",
                    data: { CheckFor: "Edit", OldPremiseTypeCode: $("#txtOldPremiseTypeCode").val(), NewPremiseTypeCode: $("#txtPremiseTypeCode").val(), OldPremiseType: $("#txtOldPremiseType").val(), NewPremiseType: $("#txtPremiseType").val() },
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (response) {
                        $('#spinner').hide();
                        if (response.PremiseTypeCodeExist == true) {
                            if (response.CheckType == "Exist") {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'The premise type code already exists!',
                                    text: 'Something went wrong!',
                                })
                            }
                            else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error, execution not possible!',
                                    text: 'Something went wrong!',
                                })
                            }
                        }
                        else if (response.PremiseTypeExist == true) {
                            if (response.CheckType == "Exist") {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'The premise type already exists!',
                                    text: 'Something went wrong!',
                                })
                            }
                            else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error, execution not possible!',
                                    text: 'Something went wrong!',
                                })
                            }
                        }
                        else {
                            //==Submit Post
                            var headers = { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() };
                            $.ajax({
                                type: "POST",
                                headers: headers,
                                url: "/AgreementInfo/PremiseTypeEdit",
                                data: { PremiseTypeSLNo: $("#PremiseTypeSLNo").val(), PremiseTypeCode: $("#txtPremiseTypeCode").val(), PremiseType: $("#txtPremiseType").val(), Status: $("input[name='Status']:checked").val() },
                                success: function (response) {
                                    $('#spinner').hide();
                                    if (response.CheckStatus == true) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Premise type has been updated.',
                                            text: 'Redirecting in 3 seconds.',
                                            timer: 3000,
                                            showConfirmButton: false
                                        }).then(function () {
                                            window.location.href = "/AgreementInfo/PremiseTypeIndex";
                                        });
                                    }
                                    else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Premise type not created, execution not possible!',
                                            text: 'Something went wrong!',
                                        })
                                    }
                                },
                                failure: function (response) {
                                    alert(response.responseText);
                                },
                                error: function (response) {
                                    alert(response.responseText);
                                }
                            });
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
                //==
            }
        });
    });
</script>